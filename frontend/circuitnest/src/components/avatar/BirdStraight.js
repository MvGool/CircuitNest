import { useEffect, useState } from "react"
import { convertDocEleToReact } from "../../util/helperFunctions"

export function BirdStraight({ 
    legs='#512F07', 
    wings='#B78029', 
    body='#FFD57F', 
    tail='#A87129',
    head='#FF993F', 
    hair='#B78029', 
    beard='#512F07', 
    blushes='#FFB69F', 
    eyes='#2B1806', 
    beakTop='#512F07', 
    beakBottom='#3A2107',
    ...props
}) {
    // Fetch all cosmetics and convert them to react elements
    const [allCosmetics, setAllCosmetics] = useState([])
    
    // Pre-load cosmetics
    useEffect(() => {
        // Set a flag to prevent race condition
        let active = true
        if (props.allCosmetics) {
            loadCosmetics()
        }
        return () => { active = false }

        // Async function to load the cosmetics
        async function loadCosmetics() {
            const allCosm = await Promise.all(props.allCosmetics.map(async (cosmetic) => {
                let res
                res = await fetch(cosmetic.visual)
                    .then(response => response.text())
                    .then(text => {
                        const parser = new DOMParser()
                        const element = parser.parseFromString(text, 'image/svg+xml')
                        return {...cosmetic, element: convertDocEleToReact(element.documentElement)}
                    })
                return res
            }))
            if (!active) return
            setAllCosmetics(allCosm)
        }
    }, [props.allCosmetics])

    return <svg 
        version="1.1" 
        width='100%'
        height='100%'
        viewBox="230 225 290 250"
        preserveAspectRatio="xMidYMax"
    >
        <g id="bird">
            <g>
                <g>
                    {/* Left leg */}
                    <path style={{fill: legs}} d="M364.536,449.316l-9.002-9.964l2.968-21.939c0.112-0.83-0.47-1.595-1.301-1.707
                        c-0.825-0.115-1.594,0.471-1.707,1.301l-2.95,21.802l-12.948,5.234c-0.777,0.314-1.152,1.199-0.839,1.976
                        c0.314,0.776,1.199,1.153,1.976,0.839l10.041-4.06l-5.104,10.755c-0.359,0.757-0.037,1.662,0.721,2.021
                        c0.21,0.1,0.432,0.147,0.649,0.147c0.567,0,1.112-0.32,1.372-0.867l5.868-12.362l8.004,8.859c0.3,0.331,0.712,0.5,1.126,0.5
                        c0.363,0,0.728-0.129,1.018-0.392C365.049,450.898,365.097,449.938,364.536,449.316z"/>
                    {/* Right leg */}
                    <path style={{fill: legs}} d="M411.089,442.591l-12.876-5.334l-1.526-21.145c-0.061-0.837-0.801-1.475-1.623-1.404
                        c-0.836,0.061-1.465,0.787-1.404,1.623l1.574,21.797l-9.105,9.525c-0.579,0.606-0.558,1.566,0.048,2.146
                        c0.294,0.281,0.672,0.421,1.049,0.421c0.399,0,0.799-0.157,1.097-0.469l8.204-8.583l5.661,12.168
                        c0.257,0.553,0.805,0.877,1.377,0.877c0.214,0,0.432-0.045,0.64-0.142c0.76-0.354,1.089-1.256,0.735-2.017l-5.029-10.807
                        l10.016,4.15c0.777,0.319,1.663-0.047,1.983-0.821C412.23,443.8,411.863,442.912,411.089,442.591z"/>
                </g>
                <g>
                    {/* Main body */}
                    <path style={{fill: body}} d="M335.021,329.056c0,0,0.62-1.626-2.169,3.791c-0.266,0.516-0.459,1.235-0.726,1.773
                        c-1.666,3.365-4.472,7.923-6.068,12.268c-3.021,8.221-4.467,17.362-5.043,28.044c-1.138,21.12,17.121,36.86,31.743,41.734
                        c12.728,4.243,39.066,5.253,55.772-4.426c5.699-3.302,12.973-9.034,16.685-14.582c3.924-5.864,5.65-12.324,6.536-21.931
                        c0.87-9.433-4.474-33.24-12.313-41.169c-12.194-12.334-24.282-25.23-47.9-23.428C345.36,311.509,335.021,329.056,335.021,329.056z"/>
                    {/* Left wing */}
                    <path style={{fill: wings}} d="M332.126,334.585c0,0-0.369,1.107-1.416,3.309c-1.078,2.265-4.142,8.48-5.521,13.263
                        c-2.099,7.279-2.916,13.565-2.403,22.574c1.012,17.769,5.944,25.357,5.944,25.357s-8.803-7.501-13.406-15.555
                        c-5.818-10.181-5.963-23.6-2.221-31.944C318.866,338.734,332.126,334.585,332.126,334.585z"/>
                    {/* Right wing */}
                    <path style={{fill: wings}} d="M419.438,334.558c0,0,8.568,14.386,9.58,37.466c0.706,16.109-5.26,27.604-5.26,27.604
                        s10.431-9.635,14.352-22.072c1.834-5.818,3.129-16.164,0.147-23.652C432.186,338.663,419.438,334.558,419.438,334.558z"/>
                </g>
                <g>
                    {/* Head */}
                    <path style={{fill: head}} d="M414.98,378.209c-6.45,10.75-20.604,18.685-38.699,18.844
                        c-14.417,0.126-24.535-3.162-30.985-8.094c-8.399-6.423-14.039-17.159-15.176-25.041c-1.174-8.131-0.601-21.737,1.676-28.424
                        c1.362-4,2.395-5.221,3.747-8.394c8.406-19.747,22.546-25.426,34.668-26.795c9.141-1.031,17.118,1.591,27.067,7.395
                        c8.925,5.207,16.069,13.398,21.413,24.947c0.612,1.323,2.74,6.737,3.204,14.37C422.73,360.761,420.485,369.034,414.98,378.209z"
                        />
                    {/* Hair */}
                    <path style={{fill: hair}} d="M338.973,320.014c4.964-7.999,10.394-12.855,16.346-15.872c5.951-3.016,11.904-4.916,20.267-4.584
                        c11.7,0.464,17.484,2.99,25.799,9.675c12.9,11.287,16.93,22.619,16.93,22.619s-10.32-2.847-16.344-6.203
                        c-6.44-3.587-11.778-10.346-13.739-10.22c-1.581-0.063-4.996,6.07-19.44,6.632c-13.288-0.004-15.225-7.83-17.181-5.385
                        c-0.839,1.049-4.987,5.929-8.331,8.913c-4.443,3.965-10.505,7.367-10.505,7.367S337.371,322.512,338.973,320.014z"/>
                    {/* Beard hairs */}
                    <g>
                        <path style={{fill: beard}} d="M395.88,369.828c-0.717-0.055-1.327,0.465-1.387,1.17l-0.458,5.406
                            c-0.06,0.706,0.464,1.327,1.17,1.387c0.037,0.003,0.073,0.005,0.109,0.005c0.66,0,1.221-0.506,1.277-1.175l0.458-5.406
                            C397.11,370.509,396.587,369.888,395.88,369.828z"/>
                        <path style={{fill: beard}} d="M383.779,376.313c-0.683-0.008-1.296,0.547-1.312,1.255l-0.071,3.28
                            c-0.015,0.709,0.547,1.296,1.255,1.311c0.725,0,1.296-0.557,1.311-1.255l0.071-3.28
                            C385.048,376.915,384.487,376.328,383.779,376.313z"/>
                        <path style={{fill: beard}} d="M373.718,365.421c-0.708-0.059-1.301,0.535-1.321,1.243l-0.116,3.849
                            c-0.021,0.709,0.535,1.3,1.243,1.321c0.73,0.001,1.301-0.549,1.321-1.243l0.116-3.849
                            C374.983,366.034,374.426,365.443,373.718,365.421z"/>
                        <path style={{fill: beard}} d="M352.676,373.595c-0.704,0.08-1.21,0.716-1.129,1.42l0.506,4.426
                            c0.074,0.654,0.63,1.138,1.272,1.138c0.049,0,0.099-0.003,0.148-0.009c0.704-0.08,1.21-0.716,1.129-1.42l-0.506-4.426
                            C354.016,374.02,353.373,373.513,352.676,373.595z"/>
                        <path style={{fill: beard}} d="M339.956,361.37c-0.699,0.114-1.173,0.774-1.058,1.474l0.833,5.073
                            c0.103,0.629,0.647,1.075,1.264,1.075c0.069,0,0.14-0.006,0.21-0.018c0.699-0.114,1.173-0.774,1.058-1.474l-0.833-5.073
                            C341.315,361.728,340.65,361.25,339.956,361.37z"/>
                        <path style={{fill: beard}} d="M408.209,359.969c-0.698-0.103-1.352,0.388-1.452,1.089l-0.575,4.022
                            c-0.1,0.701,0.388,1.352,1.089,1.452c0.061,0.009,0.123,0.013,0.184,0.013c0.628,0,1.177-0.462,1.268-1.102l0.575-4.021
                            C409.397,360.72,408.91,360.07,408.209,359.969z"/>
                    </g>
                    <g>
                        {/* Blushes */}
                        <g>
                            <path style={{fill: blushes}} d="M401.182,345.147c-3.65,0-6.609-2.361-6.609-5.273c0-2.913,2.959-5.273,6.609-5.273
                                c3.652,0,6.61,2.361,6.61,5.273C407.792,342.786,404.833,345.147,401.182,345.147z"/>
                            <path style={{fill: blushes}} d="M342.092,346.035c-3.652,0-6.61-2.361-6.61-5.273c0-2.913,2.959-5.273,6.61-5.273
                                c3.65,0,6.609,2.361,6.609,5.273C348.701,343.674,345.742,346.035,342.092,346.035z"/>
                        </g>
                        {/* Eyes */}
                        <g>
                            <path style={{fill: eyes}} d="M395.299,330.542c0-2.409-1.923-4.361-4.296-4.361c-2.373,0-4.296,1.952-4.296,4.361
                                c0,2.409,1.923,4.361,4.296,4.361C393.376,334.903,395.299,332.95,395.299,330.542z"/>
                            <path style={{fill: eyes}} d="M355.878,330.432c0-2.409-1.922-4.361-4.296-4.361c-2.372,0-4.296,1.952-4.296,4.361
                                c0,2.408,1.923,4.361,4.296,4.361C353.956,334.793,355.878,332.841,355.878,330.432z"/>
                        </g>
                        {/* Beak */}
                        <g>
                            {/* Top */}
                            <path style={{fill: beakTop}} d="M381.669,339.303c0.524,0.288,0.628,0.986,0.21,1.414c-0.884,0.906-2.196,1.34-4.854,3.405
                                c-3.35,2.602-4.606,3.23-6.597,3.23c-2.535,0-3.95-1.229-5.561-2.848c-1.681-1.69-2.038-1.874-2.922-2.78
                                c-0.825-0.846-2.003-1.393-2.003-2.019c0-1.103,1.172-0.876,3.326-2.239c1.035-0.604,4.025-4.707,7.229-4.701
                                c2.593,0.005,5.918,3.014,7.845,4.706C379.373,338.375,380.952,338.909,381.669,339.303z"/>
                            {/* Bottom */}
                            <path style={{fill: beakBottom}} d="M380.934,339.62c0.714-0.244,1.082,0.019,1.093,0.038c0.181,0.33,0.143,0.76-0.148,1.058
                                c-0.884,0.906-2.196,1.34-4.854,3.405c-3.35,2.602-4.606,3.23-6.597,3.23c-2.535,0-3.95-1.229-5.561-2.848
                                c-1.681-1.69-2.038-1.874-2.922-2.78c-0.825-0.846-2.003-1.393-2.003-2.019c0-1.103,1.166,0.016,3.63,0.763
                                c2.751,0.834,5.132,1.269,7.179,1.245c2.285-0.027,3.193,0.022,7.146-1.134C379.8,340.021,380.408,339.8,380.934,339.62z"/>
                        </g>
                    </g>
                    {/* Glasses */}
                    <foreignObject transform='translate(321,302)' width='100px' height='60px'>
                        {props.cosmetics?.glasses && allCosmetics.find((cosmetic) => cosmetic.id === props.cosmetics.glasses.id)?.element}
                    </foreignObject>
                    {/* Tie */}
                    <foreignObject transform='translate(345,365)' width='60px' height='200px'>
                        {props.cosmetics?.neck && allCosmetics.find((cosmetic) => cosmetic.id === props.cosmetics.neck.id)?.element}
                    </foreignObject>
                    {/* Hat */}
                    <foreignObject transform='translate(322,225)' width='100px' height='100px'>
                        {props.cosmetics?.hat && allCosmetics.find((cosmetic) => cosmetic.id === props.cosmetics.hat.id)?.element}
                    </foreignObject>
                    {/* Item */}
                    <foreignObject transform='translate(310,378)' width='60px' height='100px'>
                        {props.cosmetics?.item && allCosmetics.find((cosmetic) => cosmetic.id === props.cosmetics.item.id)?.element}
                    </foreignObject>
                </g>
            </g>
        </g>
    </svg>
}