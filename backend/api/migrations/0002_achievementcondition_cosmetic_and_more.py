# Generated by Django 5.0.4 on 2024-04-30 12:24

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_type', models.CharField(max_length=255)),
                ('parameters', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Cosmetic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slot', models.CharField(max_length=255)),
                ('visual', models.ImageField(blank=True, null=True, upload_to='visuals/cosmetics/')),
            ],
        ),
        migrations.RemoveField(
            model_name='level',
            name='truth_table',
        ),
        migrations.RemoveField(
            model_name='level',
            name='code',
        ),
        migrations.RemoveField(
            model_name='level',
            name='inputs',
        ),
        migrations.RemoveField(
            model_name='level',
            name='gates',
        ),
        migrations.RemoveField(
            model_name='level',
            name='outputs',
        ),
        migrations.RemoveField(
            model_name='level',
            name='boolean_function',
        ),
        migrations.CreateModel(
            name='InformationLevel',
            fields=[
                ('level_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.level')),
                ('text', models.TextField()),
                ('visual', models.ImageField(blank=True, null=True, upload_to='visuals/information/')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.level',),
        ),
        migrations.AlterModelOptions(
            name='level',
            options={'base_manager_name': 'objects'},
        ),
        migrations.RemoveField(
            model_name='level',
            name='average_time',
        ),
        migrations.RemoveField(
            model_name='level',
            name='code_lines',
        ),
        migrations.RemoveField(
            model_name='level',
            name='graph_dot',
        ),
        migrations.RemoveField(
            model_name='level',
            name='graphical_image',
        ),
        migrations.RemoveField(
            model_name='level',
            name='order_index',
        ),
        migrations.RemoveField(
            model_name='progress',
            name='completed',
        ),
        migrations.RemoveField(
            model_name='progress',
            name='input_types',
        ),
        migrations.RemoveField(
            model_name='progress',
            name='output_types',
        ),
        migrations.RemoveField(
            model_name='user',
            name='phone',
        ),
        migrations.AddField(
            model_name='classroom',
            name='gamified',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='level',
            name='number',
            field=models.PositiveIntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='level',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='level',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, to='api.level'),
        ),
        migrations.AddField(
            model_name='progress',
            name='score',
            field=models.PositiveIntegerField(default=0),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=7)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AvatarCosmetic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked', models.BooleanField(default=False)),
                ('equipped', models.BooleanField(default=False)),
                ('avatar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.avatar')),
                ('cosmetic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cosmetic')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('hint', models.TextField()),
                ('visual', models.ImageField(blank=True, null=True, upload_to='visuals/achievements/')),
                ('condition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.achievementcondition')),
                ('reward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.cosmetic')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseLevel',
            fields=[
                ('level_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.level')),
                ('gates', models.JSONField()),
                ('inputs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('outputs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('truth_table', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.BooleanField(), size=None), size=None)),
                ('boolean_function', models.TextField(blank=True)),
                ('graphical', models.JSONField()),
                ('code', models.TextField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.level',),
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
